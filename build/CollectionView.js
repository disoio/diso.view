// Generated by CoffeeScript 1.3.3
(function() {
  var CollectionView, View,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('./View');

  CollectionView = (function(_super) {

    __extends(CollectionView, _super);

    function CollectionView(data) {
      var ItemView, model, view, _i, _len, _ref;
      this.data = data;
      CollectionView.__super__.constructor.call(this, this.data);
      if (!this.item) {
        throw "CollectionView must define item View";
      }
      if (!('collection' in this.data)) {
        throw "CollectionView must pass collection param to constructor";
      }
      this.collection = this.data.collection;
      ItemView = this.item;
      _ref = this.collection;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        model = _ref[_i];
        view = new ItemView({
          model: model
        });
        this.addSubview(view);
      }
    }

    CollectionView.prototype.wrapper = function(html) {
      return html;
    };

    CollectionView.prototype.template = function() {
      var html, id, subview, _ref;
      html = '';
      _ref = this.subviews;
      for (id in _ref) {
        subview = _ref[id];
        html += subview.html();
      }
      return this.wrapper(html);
    };

    return CollectionView;

  })(View);

  module.exports = CollectionView;

}).call(this);
