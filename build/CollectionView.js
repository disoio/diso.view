// Generated by CoffeeScript 1.3.3
(function() {
  var CollectionView, View,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('./View');

  CollectionView = (function(_super) {

    __extends(CollectionView, _super);

    function CollectionView(data) {
      var ItemView, model;
      this.data = data;
      this.collection = this.data.collection;
      ItemView = this.item;
      this.subviews = (function() {
        var _i, _len, _ref, _results;
        _ref = this.collection;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          model = _ref[_i];
          _results.push(new ItemView(model));
        }
        return _results;
      }).call(this);
    }

    CollectionView.prototype.container = null;

    CollectionView.prototype.template = function() {
      var html, view;
      html = ((function() {
        var _i, _len, _ref, _results;
        _ref = this.subviews;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          view = _ref[_i];
          _results.push(view.html());
        }
        return _results;
      }).call(this)).join("\n");
      if (this.container) {
        html = this.container(html);
      }
      return html;
    };

    return CollectionView;

  })(View);

  module.exports = CollectionView;

}).call(this);
